version: '3.8'  

x-logging: 
 &default-logging  # Définition d'une ancre appelée réutiliser cette configuration
 driver: "json-file"  # stocker les logs en JSON
 options: 
  max-size: "1m"  # Limite la taille des fichiers de log à 1 mégaoctet
  max-file: "1"  # Limite le nombre de fichiers de log à 1
  tag: "{{.Name}}"  # Utilise le nom du conteneur comme tag pour les logs



services:  

 nginx-app: 
  container_name: nginx-app  
  image: nginx 
  labels:  
   logging: "promtail"  # Indique que Promtail sera utilisé pour collecter les logs
   logging_jobname: "containerlogs"  # Nom du job de log pour Promtail
  ports:  
   - 8080:80  
  networks:
   - app  
  logging: *default-logging  # Utilisation de la configuration de logs définie dans "default-logging"


 grafana:  
  image: grafana/grafana:11.0.0  
  container_name: grafana  
  ports: 
   - 3000:3000  
  volumes:  # Montage de volumes pour persister les données de configuration
   - ./config/grafana/datasources/grafana.yaml:/etc/grafana/provisioning/datasources/datasources.yaml  # Configuration des sources de données
   - ./config/grafana/plugins/app.yaml:/etc/grafana/provisioning/plugins/app.yaml  # Configuration des plugins
  environment:  
   - GF_AUTH_ANONYMOUS_ENABLED=true  # Active l'accès anonyme
   - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin  # Donne les droits d'admin aux utilisateurs anonymes
   - GF_AUTH_DISABLE_LOGIN_FORM=true  # Désactive le formulaire de login
   - GF_FEATURE_TOGGLES_ENABLE=accessControlOnCall lokiLogsDataplane  # Active certaines fonctionnalités spécifiques
   - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app  # Installation d'un plugin externe depuis une URL
  networks:
   - app  
  logging: *default-logging  


 loki:  
  image: grafana/loki:3.0.0  
  container_name: loki  
  ports:
   - 3100:3100  
  command: -config.file=/etc/loki/loki.yaml  # Spécifie un fichier de configuration personnalisé pour Loki
  volumes: 
   - ./config/loki/loki.yaml:/etc/loki/loki.yaml  # Chemin local du fichier de configuration de Loki
  networks:
   - app 
  logging: *default-logging  


 promtail:  
  image: grafana/promtail:3.0.0  
  container_name: promtail  
  volumes:  
   - ./config/promtail/promtail.yaml:/etc/promtail/docker-config.yaml  # Chemin local du fichier de configuration de Promtail
   - /var/lib/docker/containers:/var/lib/docker/containers:ro  # Accès en lecture seule aux logs des conteneurs Docker
   - /var/run/docker.sock:/var/run/docker.sock  # Accès à la socket Docker pour lire les événements de conteneurs
  command: -config.file=/etc/promtail/docker-config.yaml  # Utilise un fichier de configuration spécifique pour Promtail
  depends_on:
   - loki  # Le service "promtail" dépend du service "loki" (il doit démarrer après)
  networks:
   - app  
  logging: *default-logging  


 log-generator:  
  image: us-docker.pkg.dev/grafanalabs-global/docker-explore-logs-prod/fake-log-generator:latest 
  container_name: log-generator  
  command: -url http://loki:3100/loki/api/v1/push  # Envoie les logs générés à Loki via cette URL
  depends_on:
   - loki  
  networks:
   - app  
  logging: *default-logging  



networks: 
 app:  
  name: app  
